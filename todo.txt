emacs key bindings shadow other important standard key bindings (e.g., Ctrl-X)
call cleanup on change objects that are deleted
settings update broadcast / polling
need to check graphics output
provide "toast" messages + dialog to display past messages
first ie is initially too tall
investigate: seems like files are being reloaded a lot as elements are evaluated
provide feedback when saving and provide visible modified indicator
make whether opening or importing more apparent (in file open dialog)
review Content-Security-Policy
dagre: no arrow heads displayed in saved rendered image
examples/cmjs-demo.esbook: output of count tree and of node graph are clipped and not positioned well
preview images in saved notebooks that have been opened should cause a line break before next element (set examples/many-ecas.esbook)
sometimes input cell does not respond to keyboard shortcuts after focus is reset (with mouse?) (focus issues?)
cannot receive click events on things like button elements in the output portion of an ie (more focus-handling problems)
bundle code instead of loading out of node_modules


=== THINK ABOUT ===
save/export to a loadable web page instead of a separate document format
save to MIME format (multipart/mixed) to allow easy editing (issue: UTF-8) (see https://www.w3.org/Protocols/rfc1341/7_2_Multipart.html )
implement auto-hide for autoeval ie and dynamically change when its input element is modified (maybe not?)
keep "autoeval"?
use "contenteditable" element instead of CodeMirror stuff?
figure out what to do with nb_state
figure out how to reload / re-initialize eval state
figure out codemirror + emacs clipboard support
menus
deleting element with an eval worker running something like setInterval(): old eval worker keeps running even though "stopped" (maybe on_stopped event could help)
provide on_stopped event to allow cleanup of background "processes" (e.g., setInterval)


=== UNREPEATED BUGS ====
pythagorean-triples.esbook: first cell lines are concatenated (saw once, but not again...)
have witnessed stray text in buffers after copying/pasting/evaluating (accidental scroll wheel paste?)


=== DONE ===
* dagre: edges not rendered in image_uri
* svg elements are not displayed wide enough, both in the saved image form and the rendered form (see examples/cmjs-demo.esbook)
* use Shift-ENTER for eval and Ctrl-ENTER for eval-and-stay
* make global_export not modify globalThis
* https://github.com/Yaffle/Expression / https://www.npmjs.com/package/@yaffle/expression
* canvas2d image_uri not being rendered for persistent state
* need a way to easily define variables that are visible in subsequent interaction elements
* fix loading of old facet code in examples
* markdown processing: html tags in markdown trip up the display of the element
* markdown processing: code blocks have extraneous stuff at beginning: <span class="MathJax_Preview" ... (see: https://stackoverflow.com/questions/62111699/mathjax-strangely-render-back-tick-in-code-blocks )
* [no longer relevant] make facet scripts inline-able without having been loaded via facet() [need to have one single export handler that listens for any facet export or error event]
* update facet mechanism to use ES6 modules
* settings dialog is partially hidden by event blocker element (first time only?)
* Ctrl-, can bring up multiple settings dialogs (if a settings dialog is already showing)
* implement settings dialog
* notebook.js: update_cm_from_settings(cm, ie): not defined: bind_key_handler, remove_current_key_handler
* too many questions when saving
* message_controller: provide better handling of scrolling and focus
* keyboard handling / key bindings
* notebook / notebook state
* integrate key-handler.js into key-bindings.js
* set up html for notebook during initialization
* set up css for notebook during initialization
* load codemirror
* implement esbook mode for codemirror
* reimplement stuff that uses ipcRenderer
* implement eval
* support opening/saving notebooks
* open: prompts for saving (!)
* implement interface to IndexedDB
* provide settings persistence (through IndexedDB)
* set up "recents" (through IndexedDB)
* confirm close
* switch codemirror mode based on input type (md+mj or javascript)
* update ie class according to text/code mode (watch 'change' events that affect line 1)
* move to different ie with keyboard does not set focus correctly
* implement auto-hide for non-expression inputs
* implement message_controller.confirm_sync (eliminated the need for _sync variant...)
* update output-handlers.js
* update class OutputContext in notebook.js
* update eval-worker.js
* save failed: get_fs_stats_for_file_handle is not defined
* eval: graphics element is not sized correctly (see examples/dagre-demo.esbook)
* streamline operation of output handlers
* provide interface in eval for creating output elements, etc
* eval: provide access to output_context
* make eval_fn "this" be a persistent context for the notebook
* reset the persistent context for the notebook when resetting evaluation
* add an api for creating CanvasRendering2DContext/Element
* definable notebook init script (to be run when notebook is loaded) (autoeval)
* don't load scripts more that once: load_script(), load_script_and_wait_for_condition()
