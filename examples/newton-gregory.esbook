{
    "nb_type": "esbook",
    "nb_version": "2.0.0",
    "elements": [
        {
            "id": "id-e8b2d2cc-4e3f-4f68-913f-18b410da3687",
            "input": "## Newton-Gregory Forward Difference Interpolation and Extrapolation",
            "output": [
                {
                    "type": "text",
                    "text": "## Newton-Gregory Forward Difference Interpolation and Extrapolation"
                }
            ],
            "formatting_options": {
                "align": "left",
                "indent": "0em"
            }
        },
        {
            "id": "id-754c31c0-0f27-41bc-9636-c16886821d89",
            "input": "${formatting({ align: 'left', indent: '2em' })}\n$\n\\def\\D{\\Delta}\n\\def\\iddots{{\\kern3mu\\raise1mu{.}\\kern3mu\\raise6mu{.}\\kern3mu\\raise12mu{.}}}\n$\nLet $n,i,j \\in \\mathbb Z$, $n > 0$, $0 \\le i,j \\le n-1$.\n$ $\nGiven a function $f:\\mathbb R \\rightarrow \\mathbb R$ and $n$ observations $f(0), f(1), ..., f(n-1)$, define the forward differences $\\D^i_j$ as follows:\n$$\n\\begin{array}{ccccccccc}\nf(0) &        & f(1)    &        & f(2)       &            & f(3)       & \\dots   & f(n-2)     &            & f(n-1) \\\\\n     & \\D^1_0 &         & \\D^1_1 &            & \\D^1_2     &            & \\dots   &            & \\D^1_{n-2} &        \\\\\n     &        & \\D^2_0  &        & \\D^2_1     &            & \\D^2_2     & \\dots   & \\D^2_{n-3} &            &        \\\\\n     &        &         & \\ddots &            & \\ddots     &            & \\iddots &            &            &        \\\\\n     &        &         &        & \\D^{n-2}_0 &            & \\D^{n-2}_1 &         &            &            &        \\\\\n     &        &         &        &            & \\D^{n-1}_0 &            &         &            &            &        \\\\\n\\end{array}\n$$\nwhere each $\\D^i_j$ if the result of subtracting its left parent from its right parent.\n\nExpanding downward, it can be seen that each $\\D^i_j$ can be computed directly from the observed values as follows:\n$$\n\\begin{align}\n\\D^i_j &= \\sum_{k=0}^{i}{(-1)^{i-k}{i \\choose k}f(j+k)} \\\\\n\\end{align}\n$$\nNote that $\\D^0_j = f(j)$.\n$ $\nNow, with $C_i = \\Delta^i_0$, $f$ may be approximated by a family of functions $f_{(i)}$:\n$$\n\\begin{align}\nf_{(i)}(x) &= \\sum_{k=0}^i C_k {x \\choose i} \\tag{Newton-Gregory Formula}\n\\end{align}\n$$\n---\nGiven:\n$$\n\\begin{align}\n{x \\choose i} &= \\frac{x!}{i!(x-i)!} \\\\\n              &= \\frac{x^{\\underline{i}}}{i!}         \\tag{falling factorial formulation} \\\\\n              &= \\frac{1}{i!}\\prod_{k=0}^{i-1}{(x-k)} \\tag{expansion of falling factorial} \\\\\n\\end{align}\n$$\nwe can see how to compute $f_{(i)}(x)$ for $x \\in \\mathbb R$.",
            "output": [
                {
                    "type": "text",
                    "text": "\n$\n\\def\\D{\\Delta}\n\\def\\iddots{{\\kern3mu\\raise1mu{.}\\kern3mu\\raise6mu{.}\\kern3mu\\raise12mu{.}}}\n$\nLet $n,i,j \\in \\mathbb Z$, $n > 0$, $0 \\le i,j \\le n-1$.\n$ $\nGiven a function $f:\\mathbb R \\rightarrow \\mathbb R$ and $n$ observations $f(0), f(1), ..., f(n-1)$, define the forward differences $\\D^i_j$ as follows:\n$$\n\\begin{array}{ccccccccc}\nf(0) &        & f(1)    &        & f(2)       &            & f(3)       & \\dots   & f(n-2)     &            & f(n-1) \\\\\n     & \\D^1_0 &         & \\D^1_1 &            & \\D^1_2     &            & \\dots   &            & \\D^1_{n-2} &        \\\\\n     &        & \\D^2_0  &        & \\D^2_1     &            & \\D^2_2     & \\dots   & \\D^2_{n-3} &            &        \\\\\n     &        &         & \\ddots &            & \\ddots     &            & \\iddots &            &            &        \\\\\n     &        &         &        & \\D^{n-2}_0 &            & \\D^{n-2}_1 &         &            &            &        \\\\\n     &        &         &        &            & \\D^{n-1}_0 &            &         &            &            &        \\\\\n\\end{array}\n$$\nwhere each $\\D^i_j$ if the result of subtracting its left parent from its right parent.\n\nExpanding downward, it can be seen that each $\\D^i_j$ can be computed directly from the observed values as follows:\n$$\n\\begin{align}\n\\D^i_j &= \\sum_{k=0}^{i}{(-1)^{i-k}{i \\choose k}f(j+k)} \\\\\n\\end{align}\n$$\nNote that $\\D^0_j = f(j)$.\n$ $\nNow, with $C_i = \\Delta^i_0$, $f$ may be approximated by a family of functions $f_{(i)}$:\n$$\n\\begin{align}\nf_{(i)}(x) &= \\sum_{k=0}^i C_k {x \\choose i} \\tag{Newton-Gregory Formula}\n\\end{align}\n$$\n---\nGiven:\n$$\n\\begin{align}\n{x \\choose i} &= \\frac{x!}{i!(x-i)!} \\\\\n              &= \\frac{x^{\\underline{i}}}{i!}         \\tag{falling factorial formulation} \\\\\n              &= \\frac{1}{i!}\\prod_{k=0}^{i-1}{(x-k)} \\tag{expansion of falling factorial} \\\\\n\\end{align}\n$$\nwe can see how to compute $f_{(i)}(x)$ for $x \\in \\mathbb R$."
                }
            ],
            "formatting_options": {
                "align": "left",
                "indent": "2em"
            }
        },
        {
            "id": "id-8c921f7a-6b52-49f7-bebe-ba8a6fcb84f6",
            "input": "//\nconst observations = [1, 1, 2, 4, 8, 16, 31];\nconst n = observations.length;\n\n_.clearVars();\n_.setFunction('choose', ['x', 'i'], 'x!/i!/(x-i)!');\n\nfor (let j = 0; j < n; j++) {\n    _.setVar(`f_j${j}`,    observations[j]);\n    _.setVar(`d_i0_j${j}`, `f_j${j}`);\n}\n_.setVar('observations', `vector(${observations.join(', ')})`);\n\nfor (let i = 1; i < n; i++) {\n    for (let j = 0; j < n-i; j++) {\n        _.setVar(`d_i${i}_j${j}`, `d_i${i-1}_j${j+1} - d_i${i-1}_j${j}`);\n    }\n}\n\nawait println('### Results for computing differences top-to-bottom:');\nfor (let i = 0; i < n; i++) {\n    await printf('%2d:', i);\n    for (let s = 0; s < i; s++) await printf('   ');\n    for (let j = 0; j < n-i; j++) {\n        await printf(' %5s', _(`d_i${i}_j${j}`));\n    }\n    await println();\n}\n\nawait println('$ $');\nawait println('$ $');\n\nawait println('**Comparing computed differences with the values from the direct equation**');\nlet wrong_results = false;\nfor (let i = 0; i < n; i++) {\n    for (let j = 0; j < n-i; j++) {\n        const computed = _(`d_i${i}_j${j}`).toString();\n        const direct = _.simplify(_(`sum((-1)^(${i}-k)*choose(${i}, k)*vecget(observations, ${j}+k), k, 0, ${i})`)).toString();\n        if (direct !== computed) {\n            wrong_results = true;\n            await printf('>>> wrong: i=%d, j=%d, computed=%s, direct=%s\\n', i, j, computed, direct);\n        }\n    }\n}\nif (!wrong_results) {\n    await println('$\\\\rightarrow$ all results matched computed values');\n}\n\n// set Ci values\nfor (let i = 0; i < n; i++) {\n    _.setVar(`C_i${i}`, `d_i${i}_j0`);\n}",
            "output": [
                {
                    "type": "text",
                    "text": "### Results for computing differences top-to-bottom:\n 0:     1     1     2     4     8    16    31\n 1:        0     1     2     4     8    15\n 2:           1     1     2     4     7\n 3:              0     1     2     3\n 4:                 1     1     1\n 5:                    0     0\n 6:                       0\n$ $\n$ $\n**Comparing computed differences with the values from the direct equation**\n$\\rightarrow$ all results matched computed values\n"
                }
            ],
            "formatting_options": {
                "align": "left",
                "indent": "0em"
            }
        },
        {
            "id": "id-3bc80d07-8bc0-484b-91a4-6eabb49b99aa",
            "input": "//\nprintln(_.simplify('choose(6, 2)'))",
            "output": [
                {
                    "type": "text",
                    "text": "15\n"
                }
            ],
            "formatting_options": {
                "align": "left",
                "indent": "0em"
            }
        }
    ]
}